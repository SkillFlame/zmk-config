/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D      &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT   &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&none           &none     &kp UP    &none      &kp LG(E)  &none        &kp N7   &kp N8  &kp N9    &kp PLUS   &kp LC(HOME)  &kp F1
&none           &kp LEFT  &kp DOWN  &kp RIGHT  &kp LG(D)  &none        &kp N4   &kp N5  &kp N6    &kp MINUS  &kp LC(END)   &kp F10
&kp LEFT_SHIFT  &none     &none     &none      &none      &none        &kp N1   &kp N2  &kp N3    &kp DOT    &none         &kp F20
                                    &kp LGUI   &trans     &kp SPACE    &kp RET  &kp N0  &kp RALT
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp BACKSLASH   &kp EXCL      &kp DOUBLE_QUOTES  &kp HASH    &kp DLLR      &kp PRCNT    &kp AMPERSAND  &kp SLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp SINGLE_QUOTE
&none           &bt BT_CLR    &bt BT_PRV         &bt BT_NXT  &none         &to 3        &none          &none      &kp LBKT              &kp RBKT               &kp PLUS   &kp GRAVE
&kp LEFT_SHIFT  &out OUT_TOG  &none              &none       &none         &none        &none          &none      &kp LBRC              &kp RBRC               &kp MINUS  &kp TILDE
                                                 &kp LGUI    &kp LEFT_ALT  &kp SPACE    &kp RET        &trans     &kp RALT
            >;
        };

        Game {
            label = "Game";
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &sl 4
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &to 0
                     &none  &none  &none    &none  &none  &none
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
&kp N0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
&to 3    &kp L         &kp O         &kp Y         &kp K         &kp G           &kp F5         &trans         &trans         &trans         &trans         &kp LA(F4)
&kp F10  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans         &to 0
                                     &kp J         &kp I         &kp M           &trans         &trans         &trans
            >;
        };
    };
};

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };
